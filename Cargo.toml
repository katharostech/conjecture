[package]
name = "maxim"
version = "0.1.0-alpha.0"
edition = "2018"
authors = [
    "Maxim Contributors", 
    "Zicklag <zicklag@katharostech.com>",
    "Robert Simmons Jr. MSc.",
    "Khionu Sybiern <dev@khionu.net>"
]
license = "Apache-2.0"
homepage = "https://github.com/katharostech/maxim"
repository = "https://github.com/katharostech/maxim"
documentation = "https://docs.rs/maxim"
readme = "README.md"
description = """
Implements a highly-scalable and ergonomic actor system for Rust based on the 
best of Erlang / Elixir and Akka. A fork of the Axiom actor framework.
"""

keywords = [
    "Actor", 
	"Actors", 
	"Akka", 
	"Erlang", 
	"Elixir"
]

categories = [
    "asynchronous",
    "concurrency"
]

exclude = [
    "/.gitignore",
    "/.git",
    "/.github",
    "/.travis.yml",
    "/modoc.config",
]

[features]
default = ["actor-pool"]

# Actor System Features

# Enable the use of AidPool's
actor-pool = ["rand", "rand_xoshiro"]

# Automatically determine the default number of threads from the number of CPUs. Adds the
# num_cpus dependency.
auto-num-threads = ["num_cpus"]

# Logging features

# Disables trace logging for release builds ( may improve performance for release builds )
no-release-trace-logging = ["tracing/release_max_level_trace"]

# Enables logging messages created by the `log` crate as well as the `tracing` crate
enable-log-crate = ["tracing/log"]

[badges]
# We won't be using Travis in a bit
#travis-ci = { repository = "katharostech/maxim" }
is-it-maintained-issue-resolution = { repository = "katharostech/maxim" }
is-it-maintained-open-issues  = { repository = "katharostech/maxim" }
maintenance = { status = "actively-developed" }

[dev-dependencies]
tracing-subscriber = "0.2.5"
rand = "^0.7"
serde_json = "^1.0.40"

[dependencies]
smol = "0.1.4" # Async Executor
piper = { path = "lib/piper" } # Async pipes, channels, mutexes, and more
futures = { version = "0.3.1", default-features = false } # Async Utils
serde = { version = "1.0.97", features = ["derive", "rc"] } # Serialization support
bincode = "1.1.4" # RPC Serialization
dashmap = "1.0.3" # Concurrent hashmap
tracing = "0.1.13" # Tracing ( like logging with spans and extra event data )
tracing-futures = { version = "0.2.4", default-features = false, features = ["futures-03"] }
async-trait = "0.1.30" # Macro for creating async traits
uuid = { version = "0.8.1", features = ["serde", "v4"]} # UUID Generation
once_cell = "1.0.2"
rand = { version =  "0.7.3", optional = true } # Random support
rand_xoshiro = { version = "0.4.0", optional = true } # Fast random number generator
num_cpus = { version = "1.10.1", optional = true } # Detect number of CPUs
async-channel = "1.1.0"
